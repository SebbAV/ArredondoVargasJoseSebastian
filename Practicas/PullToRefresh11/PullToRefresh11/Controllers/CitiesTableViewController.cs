// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using UIKit;

namespace PullToRefresh11
{
    public partial class CitiesTableViewController : UITableViewController
    {
        #region Class Variables
        Dictionary<string, List<string>> cities;
        List<string> keyList;
        UIRefreshControl refreshControl;
        #endregion


        public CitiesTableViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            TableView.Delegate = this;
            TableView.DataSource = this;
            InitializeComponents();

    


        }

        #region TableView Data Source
        public override nint NumberOfSections(UITableView tableView) => keyList.Count;

        public override string TitleForHeader(UITableView tableView, nint section) => keyList[(int)section];

        public override nint RowsInSection(UITableView tableView, nint section) => cities[keyList[(int)section]].Count;

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            var cell = tableView.DequeueReusableCell("tbl_Identifier", indexPath);
            cell.TextLabel.Text = $"{cities[keyList[indexPath.Section]][indexPath.Row]}";
            return cell;
        }
        public override string[] SectionIndexTitles(UITableView tableView) => keyList.ToArray();
        #endregion

        #region Internal Funcitonality
        void InitializeComponents()
        {

            //Events Called.
                CitiesManager.SharedInstance.CitiesFetched += (object sender, CitiesEventArgs e) =>
                {
                    cities = e.Cities;
                    keyList = new List<string>(cities.Keys);
                    InvokeOnMainThread(() => {
                        refreshControl.EndRefreshing();
                        TableView.ReloadData();
                    });
                };
            CitiesManager.SharedInstance.FetchCitiesFailed += (object sender, ExceptionCitiesEventArgs e) =>
            {
                InvokeOnMainThread(() =>
                {
                var alert = UIAlertController.Create("Error", e.Error, UIAlertControllerStyle.Alert);
                    alert.AddAction(UIAlertAction.Create("Ok", UIAlertActionStyle.Cancel, null));
                    PresentViewController(alert,true,null);
                    refreshControl.EndRefreshing();
                });

            };


            cities = CitiesManager.SharedInstance.GetDefaultCities();
            keyList = new List<string>(cities.Keys);


            refreshControl = new UIRefreshControl();
            refreshControl.ValueChanged += delegate {
                //Download Data from dropbox
                CitiesManager.SharedInstance.FetchCities();
            };
            TableView.RefreshControl = refreshControl;
        }
        #endregion

    }
}
